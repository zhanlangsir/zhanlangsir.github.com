<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | 挨踢人生]]></title>
  <link href="http://zhanlangsir.github.com/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://zhanlangsir.github.com/"/>
  <updated>2012-12-28T10:40:20+08:00</updated>
  <id>http://zhanlangsir.github.com/</id>
  <author>
    <name><![CDATA[zhanlang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[typecho rewrite 规则]]></title>
    <link href="http://zhanlangsir.github.com/blog/2012/09/20/typecho-rewrite-rule/"/>
    <updated>2012-09-20T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2012/09/20/typecho-rewrite-rule</id>
    <content type="html"><![CDATA[<h3>后台永久链接配置:</h3>

<p>是否使用地址重写功能：<em>启用</em><br/>
自定义文章路径： 个性化定义 <code>/{year}/{month}/{day}/{slug}</code><br/>
独立页面后缀名： <em>html</em></p>

<p>你可以到sae后台的appconfig中填写appconfig规则:</p>

<pre><code>name: your app name
version: 1
cron:
handle:
- rewrite: if( in_header["Host"] == "aitiblog.sinaapp.com" &amp;&amp; path ~"(.*)" ) goto "http://www.aitilife.com$1?%{QUERY_STRING}"
- rewrite: if( in_header["Host"] == "1.aitiblog.sinaapp.com" &amp;&amp; path ~"(.*)" ) goto "http://www.aitilife.com$1?%{QUERY_STRING}"
- rewrite: if( in_header["Host"] == "aitilife.com" &amp;&amp; path ~"(.*)" ) goto "http://www.aitilife.com$1?%{QUERY_STRING}"
- rewrite: if( in_header["Host"] == "aitilife.com" &amp;&amp; path ~"(.*)" ) goto "http://www.aitilife.com$1?%{QUERY_STRING}"
</code></pre>

<p>第一二个rewrite把sina的域名重定向到www开头的独立域名。<br/>
第三个rewrite把独立顶级域名重定向到www开头的独立域名。<br/>
最后一个rewrite到正确的地址。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sae wordpress 转 typecho]]></title>
    <link href="http://zhanlangsir.github.com/blog/2012/09/20/sae-wordpress-zhuan-typecho/"/>
    <updated>2012-09-20T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2012/09/20/sae-wordpress-zhuan-typecho</id>
    <content type="html"><![CDATA[<p>wordpress用久了就感觉不新鲜了。。<br/>
并且随着wordpress的不断更新，它也变的越来越庞大(我不说痈肿)...太多东西是我不需要的，后来无意中发现了typecho这个博客程序,它最大的特点就是简洁，轻便，所以就打算把博客转为typecho试试水先。</p>

<p><strong><em>这篇文章适用范围是：</em></strong><br/>
sae上的wordpress应用数据转移到另外一个sae typecho应用上，而不是原地把wordpress程序直接转换为typecho，如果你原来的wordpress程序不是在sae上的话，那就可以跳过了，因为你可以直接使用插件把数据转过来。</p>

<p>所以<em>不符合</em>你的需求的同学可以不用往下看了~当然你如果对我的折腾过程有兴趣也可以继续。。</p>

<p>因为sae上是无法得到数据库用户名和密码的，所以没办法通过插件进行数据转换，那就只能手动折腾了.<br/>
经过测试，发现直接在sae mysql上导出的数据是不完整的，必须通过<strong>Deferred Jobs</strong>才能导出完整的数据。<br/>
Deferred Jobs在sae应用管理后台的服务管理一栏中，先从Deferred Jobs中把数据库中的数据导出来，如果数据大于4M，再通过Deferred Jobs把数据导入你的typecho应用中,导入方法可以从文档中找到.<br/>
导入完成后，你的typecho数据库中会有typecho<em>和wp</em>前缀的n张表,然后进入typecho数据库中，把typecho_comments ，typecho_contents， typecho_metas表中的唯一条数据删除(新装的typecho中会有一篇文章和一条评论).然后数据转换正式开始。</p>

<!--more-->


<ol>
<li><p>转换评论,在PHPMyAdmin中点击sql一栏,输入下面的sql语句然后点执行,把wordpress中的评论转换过来</p>

<pre><code> insert into typecho_comments (coid, cid,created, author, authorId, ownerId, mail, url, ip, agent, text, type, status, parent)
 select
 wp_comments.comment_ID,
 wp_comments.comment_post_ID,
 unix_timestamp(wp_comments.comment_date_gmt),
 wp_comments.comment_author,
 wp_comments.user_id,
 1,
 wp_comments.comment_author_email,
 wp_comments.comment_author_url,
 wp_comments.comment_author_IP,
 wp_comments.comment_agent,
 wp_comments.comment_content,
 wp_comments.comment_type,
 wp_comments.comment_approved,
 wp_comments.comment_parent
 from wp_comments
</code></pre>

 上面的语句执行完后再输入下面语句把wp的评论类型转换过来

<pre><code> update typecho_comments set type = 'comment' where isnull(type) or length(trim(type))&amp;lt;1; //把评论类型为空的评论的类型设置为'comment'
</code></pre>

 然后把垃圾评论和回收站中的评论删掉再设置好评论的状态

<pre><code> delete from typecho_comments where status = 'spam'; //删除垃圾评论
 delete from typecho_comments where status = 'trash'; //删除回收站中的评论

 update typecho_comments set status = 'approved' where status = '1'; //设置wp中的批准的评论的状态为1
 update typecho_comments set status = 'waiting' where status = '0'; //设置wp中的等待审核的评论的状态为0[/sql]
</code></pre>

<p> 现在你打开typecho博客，已经可以看到就算一篇文章的没有，但是却有一堆的评论。。。</p></li>
<li><p>转换分类,tag,先把默认分类删掉(可以进博客后台删,也可以从数据库的typecho_metas中删)，删完分别输入下面的语句</p>

<pre><code> //转换tag
 insert into typecho_metas (mid, name, slug, type, description, count)
 select
 term_taxonomy_id,
 name,
 slug,
 'tag',
 description,
 count
 from wp_term_taxonomy
 join wp_terms
 on wp_terms.term_id = wp_term_taxonomy.term_id
 where taxonomy = 'post_tag';

 //转换分类
 insert into typecho_metas (mid, name, slug, type, description, count)
 select
 term_taxonomy_id,
 name,
 slug,
 'category',
 description,
 count
 from wp_term_taxonomy
 join wp_terms
 on wp_terms.term_id = wp_term_taxonomy.term_id
 where taxonomy = 'category'
</code></pre></li>
<li><p>转换分类,tag，文章关系表</p>

<pre><code> insert into typecho_relationships (cid, mid)
 SELECT
 object_id,
 wp_term_relationships.term_taxonomy_id
 FROM
 wp_term_relationships
 join wp_term_taxonomy
 on wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
</code></pre></li>
<li><p>转换文章表,typecho中使用slug作为文章链接,这里是把woredpress中的post_name子段转换为slug, 而wordpress的post_name子段允许重复,typecho的slug是不允许重复的，所以可能会转换失败，官方的转换插件中是把post_name和ID连接起来作为slug的，但是这样的结果就是你的文章的链接后面会加入一串无意义的数字，所以如果你文章中post_name重复的次数不多的话，建议你先手动把重复的修改一下，然后再继续下面的转换，如果重复的太多，而你又可以接收your_post_url12345,这样的链接的画，你可以把下面语句中的第6行从post_name改为CONCAT(post_name, ID),就可以了。</p>

<pre><code> insert into typecho_contents (cid,title,slug,created,modified, `text`, `order`,authorId,template,type,status,password,commentsNum,allowComment,allowFeed,allowPing)
 select
 ID,
 post_title,
 post_name,
 unix_timestamp(post_date_gmt),
 unix_timestamp(post_modified_gmt),
 post_content,
 menu_order,
 post_author,
 NULL,
 post_type,
 post_status,
 post_password,
 comment_count,
 comment_status,
 '1',
 ping_status
 from wp_posts
 where post_type = 'post' or post_type = 'page'
</code></pre>

 然后删除回收站中和自动保存的文章

<pre><code> delete from `typecho_contents` WHERE status = 'trash' //删除回收站中文章
 delete from `typecho_contents` WHERE status = 'auto-draft' //删除自动保存文章
 update typecho_contents set allowComment = '1' //打开文章评论
 update typecho_contents set allowPing = '1' //打开文章pingback
</code></pre></li>
</ol>


<p>转换到此结束。<br/>
最后如果你有<strong>绑定独立域名</strong>的话，到mysql的typecho_options表中把siteUrl子段改为你的独立域名即可~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[7款本地PHP环境搭建工具]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/04/13/seven-php-deleloper-environment-create-tool/"/>
    <updated>2011-04-13T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/04/13/seven-php-deleloper-environment-create-tool</id>
    <content type="html"><![CDATA[<p>平时调试php程序或者试用一下php的网站程序什么的都需要一个快速,方便的环境,每次都直接在远程虚拟主机上弄的话，就太麻烦了，也会把虚拟主机弄的一团糟，而手动本地搭建php环境需要安装mysql,php,apache2等等东西，有的童鞋可能嫌太麻烦了，所以下面介绍7款本地phhp环境搭建工具,可以快速搭建好本地php环境！</p>

<ol>
<li><a href="http://www.apachefriends.org/zh_cn/xampp.html" title="XAMPP">XAMPP</a><br/>
XAMPP是一款比较强大的本地测试平台，它集成了必须的三个功能，还带有 FileZilla.<br/>
软件带有一个控制面板，在里面可以把Apache、MySql和FileZilla三者注册为系统服务或者卸载服务，有服务启动的控制按钮，而且在窗口下部还能看到服务的运行信息。虽说面板是英文的，但清楚易懂<br/>
注册为系统服务有个好处就是开机能够自动运行,但是会消耗一定的系统资源,怎么取舍用户自己来定<br/>
安装成功,服务也启动成功后,就可以把浏览器打开输入http://localhost/,试试是否成功.在XAMPP的网页选项里,有中文支持
<!--more--></li>
<li><a href="http://www.wampserver.com/en/" title="Wamp Server">Wamp Server</a><br/>
它的官方网站没有中文,但是程序支持中文.启动安装程序后,它会提示你请先卸载旧版.不支持覆盖式的升级,然后一路NEXT就能安装成功。<br/>
它在任务托盘里有个图标,如果服务启动异常,它就是红色的;如果部分异常,它就变成黄色:如果是一切正常,那么它就变成了白色,这些不同的颜色警示,你很容易判断当前你的localhost能不能打开.<br/>
它还能切换在线和离线状态，选项中的文语言项中也有简体中 文可选，很不错。</li>
<li><a href="http://vertrigo.sourceforge.net/" title="Vertrigo Server">Vertrigo Server</a><br/>
这是一个轻量级的WAMP环境，但是你下载它的时候，迅雷自带的安全组件居然说它带有病毒。 经过我的扫描（ESS3.0）和使用来看，这完全是个误报，所以大家可以放心使用。安装一路NEXT就行，其中PhpMyAdmin中居然还有原始密码， 是vertrigo，感觉在本地测试的话，这种默认没有必要。它带有一个简单的控制面板，运行状态也一目了然<br/>
在它的localhost页面中带有常用链接，很方便</li>
<li><a href="http://phpnow.org/" title="PHPNow">PHPNow</a><br/>
PHPNow真的很简单，简单到安装程序就是用RAR做的一个自解压程序。自释放后快捷方式也没有，你必须自己找到那个文件存放的文件夹，然后运行Init.cmd这个程序来初始化。初始化过程中提示设置密码，因为是在CMD命令行中，只设计了一次密码输入，没有密码确认项，所以请设置的时候千万小心，不要忘了。它也把式Apache和MySql注册为服务，开机自启动<br/>
在程序文件夹中，它也带有控制面板，只不过是CMD的，但很好用<br/>
卸载就更容易了，在软件自带的控制面板中卸载服务，然后关把整个文件夹删掉就行。这么方便，图简便的可以试试</li>
<li><a href="http://download.pchome.net/development/sever/php/detail-40373.html" title="PHPStudy">PHPStudy</a><br/>
PHPStudy不一样，它含有IIS+PHP和Apache+PHP，软件推荐设置是后者。在任务托盘里也有图标，可以打开面板来看服务运行状态，也很简洁。
打开localhost，出现的是标准的PHP信息界面。</li>
<li><a href="http://www.appservnetwork.com/" title="AppServ">AppServ</a><br/>
程序安装过程中它提示你可以改变默认的80端口为服务端口，这样可以避免端口共享产生的冲 突。可有密码设置提示，但是做得比PHPNow好多了，软件还可以设置字符集，默认为UTF-8<br/>
虽然软件没有控制面板，但一切操作都在开始菜单中加入了快捷方式，使用当然很方便<br/>
软件还带有MySql命令行终端</li>
<li><a href="http://www.easyphp.org/" title="EasyPHP">EasyPHP</a><br/>
软件如其名，真的很EASY！安装一路NEXT，但是不会把Apache和MySql加载为服务，所以每次使用都要手工来启动。软件也带简单的控制面板，其他的没什么要说的了。</li>
</ol>


<p>注：以上介绍原文出自linxo.cn，不过该网站已不在，就不列出原文地址了。</p>

<p><strong>常见的两个问题</strong><br/>
其实我只使用过XAMPP和EasyPHP，但一般都大同小异，最常碰到的两个问题就是由于端口问题无法启动Apache，和无法在本地实现Rewrite。</p>

<ol>
<li>由于端口问题无法启动Apache<br/>
如果是由于端口问题无法启动Apache, 那就关闭其它程序，一个一个的试，确定是哪个占用了80端口，最常见的就是迅雷。</li>
<li>本地开启Rewrite模块<br/>
其它是否适用我不知道。XAMPP和EasyPHP, 找到httpd.conf这个文件，打开编辑，把所有的AllowOverride None换成AllowOverride All， 再把#LoadModule rewrite_module modules/mod_rewrite.so前面的”#”号去掉即可。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordPress需要访问您网页服务器的权限,请输入您的FTP登录XXXX完美解决方法]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/04/10/wordpress-error-about-permissions/"/>
    <updated>2011-04-10T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/04/10/wordpress-error-about-permissions</id>
    <content type="html"><![CDATA[<p>今天在ubuntu上搭建了lamp环境,想本地调试一下wordpress,本来一切都非常顺利，但是到了安装插件的时候却提示:<br/>
<strong><em>要执行请求的操作，WordPress需要访问您网页服务器的权限.请输入您的FTP登录凭据以继续.如果您忘记了您的登录凭据(如用户名,密码),请联系您的网站托管商</em></strong></p>

<p>这是肿么回事呢？是我的环境问题，还是别的问题呢？<br/>
经过一段时间的测试终于确定，这是本地权限的问题，因为apache2的运行用户是www-data，而不是你的当前用户。意思就是就算你拥有网站根目录的全部权限也是不行的，因为在wordpress中新上传的插件的权限都是www-data用户的，而不是你的，然后你需要解压这个插件压缩包来进行安装，但是你却没有它的使用权限，所以出现<strong>"WordPress 需要访问您网页服务器的权限"</strong>问题。</p>

<!--more-->


<p>说了这么多，怎么解决呢？很简单:</p>

<h3>方法一:</h3>

<p>如果不是自己编译的LAMP环境，那么网站的根目录都会是/var/www/,那么把wprdpress解压到此目录后，执行</p>

<pre><code>sudochown-R www-data /var/www/wordpress
sudochmod-R775/var/www/wordpress
</code></pre>

<p>这样就完全解决问题了.注意了,不需要把/var/www/目录的所有者也设置为www-data,而只需要设置wordpress文件夹的所有者.</p>

<h3>方法二:</h3>

<p>wp-config.php里加入下面代码:</p>

<pre><code>define("FS_METHOD", "direct");
define("FS_CHMOD_DIR", 0777);
define("FS_CHMOD_FILE", 0777);
</code></pre>

<p>这个方法的原理也是和方法一的一样，它是直接在上传的时候把权限修改了，而方法一是在任何时候都拥有上传文件的权限。</p>

<h3>方法三:</h3>

<p>把apache2的运行用户改为你的当前用户</p>

<h3>方法四:</h3>

<p>把你的当前用户添加到www-data用户组</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpMyAdmin:无法在发生错误时创建会话,请检查PHP或网站服务器日志XX 解决办法]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/04/10/phpmyadmin-can-not-create-session/"/>
    <updated>2011-04-10T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/04/10/phpmyadmin-can-not-create-session</id>
    <content type="html"><![CDATA[<ol>
<li>打开我的电脑——系统安装盘(不错的话一般都是C盘)——打开WINDOWS文件夹——找到Temp目录<br/>
右击打开属性，点到安全选项，如果没有你可以先按一下alt，然后就会出现工具栏,在窗口的上边点开 工具——文件夹选项——查看——将“使用单文件共享(推荐)”钱的勾去掉就有了</li>
<li>说简单点就是：WIN下系统文件夹windows里面就有一个TEMP的临时文件夹，只需将此文件夹USER用户权限设置为完全控制就能解决。假如还是有这个错误，原来的那个文件夹带它里边的东西都删除</li>
<li>另外还有一种方法：在c盘windows目录下 php.ini<br/>
比如你可以找到这一行session.save_path = "某个路径"<br/>
改为<code>session.save_path = "D:\\webserverphpsession"</code><br/>
然后要建立这个目录<code>D:\\webserverphpsession</code></li>
</ol>

]]></content>
  </entry>
  
</feed>
