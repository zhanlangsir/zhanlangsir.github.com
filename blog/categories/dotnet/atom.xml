<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DotNet | 挨踢人生]]></title>
  <link href="http://zhanlangsir.github.com/blog/categories/dotnet/atom.xml" rel="self"/>
  <link href="http://zhanlangsir.github.com/"/>
  <updated>2012-12-28T10:53:40+08:00</updated>
  <id>http://zhanlangsir.github.com/</id>
  <author>
    <name><![CDATA[zhanlang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WPF自定义依赖属性的双向绑定问题]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/08/11/wpf-custume-dependencyproperty-twoway-binding/"/>
    <updated>2011-08-11T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/08/11/wpf-custume-dependencyproperty-twoway-binding</id>
    <content type="html"><![CDATA[<p>一直没什么机会自定义依赖属性(DependencyProperty)，因为用到他的场合不多，今天终于碰到了这种情况，但是自定义依赖属性后，发现无法进行双向绑定，如果无法进行绑定，那么就完全可以普通属性代替他，但是会比较麻烦，最后在孤狼晖的帮助下解决了这个问题~非常感谢。</p>

<p>原来，要实现绑定，还需要用带另外一个类</p>

<p>DependencyPropertyDescriptor</p>

<p>MSDN介绍看这里：<a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=ZH-CN&k=k(SYSTEM.COMPONENTMODEL.DEPENDENCYPROPERTYDESCRIPTOR);k(TargetFrameworkMoniker-%22.NETFRAMEWORK%2cVERSION%3dV4.0%22);k(DevLang-CSHARP)&rd=true">点我查看</a></p>

<p>我们要做的就是使用这个类来添加一个事件对依赖属性的更改进行监听。
descriptor.AddValueChanged(this, new EventHandler(TextChanged));</p>

<p>AddValueChanged函数的第一个参数就是当前类，第二个函数就是在依赖属性被修改时调用的函数，我们可以在此函数内进行一些修改操作。</p>

<p>这样就可以实现绑定~</p>

<p>时间匆忙，说的不是很明白，下面是源代码。</p>

<p><a href="http://www.gokuai.com/f/9e2Fag17rY5Qo026">源代码下载</a></p>

<p>希望对遇到此问题的童鞋有所帮助~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windows wpf版gmbox]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/07/11/gmbox-for-windows/"/>
    <updated>2011-07-11T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/07/11/gmbox-for-windows</id>
    <content type="html"><![CDATA[<p>学wpf也有一个星期了，个人认为学新东西都得一边学一边实际才能更快的掌握新技能~而刚好不久之前看到过一个跨平台的音乐下载器项目gmbox,可以下载和收听google music的音乐~灰常好的一个项目，所以就产生了做一个wpf版gmbox的念头,刚好也可以巩固一下学到的知识~</p>

<p>做了几天，完成了一下简单的功能~</p>

<p>这是打开时的节目，小狼的界面设计并不牛叉。。。所以界面就先只能是这样了，不过在播放器大部分功能都完成的时候会进行界面调整的。</p>

<p>左上角有一个选项菜单，可以配置歌曲的下载路径</p>

<p>歌词显示，位置有点偏左，迟点进行调整，歌词是自动下载的。<!--more--></p>

<p>还是歌词。。。左边的是播放列表</p>

<p>5种播放模式~</p>

<p>不想要的歌曲可以移除</p>

<p>在线搜索歌曲，双击可以加到播放列表并开始播放</p>

<p>右键搜索结果列表可以进行下载，默认下载路径是C:UsersPublicMusicGmBoxDownload，下载之前最好在左上角的菜单那里设置一下下载路径，设置后会可以保存。</p>

<p>因为现在只做出了一个大概的模型，代码也还很混乱，所以源码先不公开了，迟点会共享的~</p>

<p>还有一点，wpf版仅支持win7系统~用xp的童鞋就不好意思啦~</p>

<p>最后，灰常感谢gmbox的作者能够开源.</p>

<p> </p>

<p><strong>python+gtk版gmbox项目地址:</strong></p>

<p><a href="http://code.google.com/p/gmbox/">http://code.google.com/p/gmbox/</a></p>

<p>希望各位大牛能一起完善他。</p>

<p><strong>wpf版gmbox下载地址:</strong>
<a title="dbank下载" href="http://dl.dbank.com/c0iuu5pkfg" target="_blank">Dbank下载</a>
<a title="min下载" href="http://min.us/mbykyJE" target="_blank">min下载</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WPF学习与分享之二：DISPATCHEROBJECT与WPF线程模型]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/07/05/wpf-thread-model/"/>
    <updated>2011-07-05T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/07/05/wpf-thread-model</id>
    <content type="html"><![CDATA[<p>很好的学习资料，写的简浅易懂，喜欢的同学可以看看</p>

<p><a title="WPF学习与分享之二：DISPATCHEROBJECT与WPF线程模型(上)" href="http://www.cnblogs.com/Nullnoid/archive/2008/08/03/1259012.html" target="_blank">WPF学习与分享之二：DISPATCHEROBJECT与WPF线程模型(上)</a></p>

<p><a title="WPF学习与分享之二：DISPATCHEROBJECT与WPF线程模型下(下)" href="http://www.cnblogs.com/Nullnoid/archive/2008/08/06/1259429.html%20" target="_blank">WPF学习与分享之二：DISPATCHEROBJECT与WPF线程模型(下)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVC导航属性无法显示]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/05/14/mvc-dao-hang-shu-xing-wu-fa-xian-shi/"/>
    <updated>2011-05-14T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/05/14/mvc-dao-hang-shu-xing-wu-fa-xian-shi</id>
    <content type="html"><![CDATA[<p>在model的一对多映射中,发现导航属性无法正常获取，通过下断点查看,存的时候确实有存进去,而且对应的数据库中也已经出现导航属性对应的model的数据,但是在读取该导航属性的时候，却发现结果为null,即没有正确映射到model上。后来再看了一遍教程的说明,发现少了virtual属性,以致</p>

<p>Entity Framework没有使用到延迟加载特性，故没有正确加载导航属性,加上virtual修饰符即可。</p>

<p>如果不知小狼在说什么的直接无视。。。。。</p>

<p>迟点会写一篇延迟加载的文章滴~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVC3ajax无效的问题]]></title>
    <link href="http://zhanlangsir.github.com/blog/2011/05/12/mvc3ajax-invalid/"/>
    <updated>2011-05-12T00:00:00+08:00</updated>
    <id>http://zhanlangsir.github.com/blog/2011/05/12/mvc3ajax-invalid</id>
    <content type="html"><![CDATA[<p>今天看到这个例子的时候：<a href="http://msdn.microsoft.com/zh-cn/library/dd381533(v=VS.100).aspx" title="msdn example">例子</a></p>

<p>我完全是按他的步骤来做的，不同的是教程中使用的是mvc2,而我用的是mvc3,结果@Ajax.ActionLink()的结果和普通的@Html.ActionLink()得到的结果完全一样，并没有体现出Ajax的效果，不应该是这样啊，具体情况看下面：</p>

<p>这里是输入页面：<br/>
<img src="http://atimg-blogimg.stor.sinaapp.com/12/12/mvcajax1.png" title="mvc ajax1" alt="mvcajax1" /><br/>
点击Submit按钮提交信息的时候，正常的情况应该单单替换了上图中的Nothing Entered文本，而Page Rendered: 13:29:42是没有变化的。<br/>
<img src="http://atimg-blogimg.stor.sinaapp.com/12/12/mvcajax2.png" title="mvc ajax2" alt="mvcajax2" /></p>

<!--more-->


<p>但是结果却是在新的页面显示了结果，很明显没有使用到Ajax的效果。<br/>
<img src="http://atimg-blogimg.stor.sinaapp.com/12/12/mvcajax3.png" title="mvc ajax3" alt="mvcajax3" /><br/>
为什么会这样呢？google了一下，发现有类似的问题,但是他的原因是没有引用MicrosoftAjax<em>.js(</em>表示任意字符，即MicrosoftAjax开头的js文件),而我已经添加了这两个文件的引用.</p>

<p>为了找出问题，小狼只好再新建了mvc2的项目，再按照和mvc3完全一样的步骤修改代码，完了运行一下…</p>

<p>神了个奇，mvc2项目就完全正常，那么问题出现在那呢？</p>

<p>在对比了引用的装配件，javascript脚本,web.config配置后，发现问题在于mvc3的web.config配置文件中。
多了</p>

<pre><code>&lt;appSettings&gt;
&lt;add key="webpages:Version" value="1.0.0.0"/&gt;
&lt;add key="ClientValidationEnabled" value="true"/&gt;
&lt;add key="UnobtrusiveJavaScriptEnabled" value="true"/&gt;
&lt;/appSettings&gt;
</code></pre>

<p>把<code>&lt;add key="UnobtrusiveJavaScriptEnabled" value="true"/&gt;</code>删掉后，发现mvc3的项目也能正常出现ajax效果。<br/>
但是新的问题又来了。<code>&lt;add key="UnobtrusiveJavaScriptEnabled" value="true"/&gt;</code>这句是激活Unobtrusive客户端验证必须的，难道不可以共存，这不应该啊。</p>

<p>知道了问题发生在那之后就好办了。Google了一下，终于得到最终的解释：<br/>
和mvc1和mvc2不一样，在mvc3中使用jquery作为默认javascript框架,所以html helper都是基于jquery框架的,所以MicrosoftAjax*脚本已经不再使用了，所以引用了MicrosoftAjax.js没有起作用。</p>

<p><strong>总结一下:</strong></p>

<ul>
<li>最终解决办法就是在site.master(ASPX引擎)或者_Layout.cshtml(RAZOR引擎)中添加jquery.unobtrusive-ajax.min.js或者jquery.unobtrusive-ajax.js的引用，而不是MicrosoftAjax*.js引用。</li>
<li>搜索引擎是最好的老师，几乎所以问题都可以在网上搜到，当然google和baidu搜出来的内容质量则大大不一样~</li>
</ul>

]]></content>
  </entry>
  
</feed>
